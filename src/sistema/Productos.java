
package sistema;

import clases.conexion;
import com.mysql.jdbc.PreparedStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Productos extends javax.swing.JFrame {

    /**
     * Creates new form Productos
     */
    public Productos() {
        initComponents();
        user_password objusuario=new user_password();
        dbuser=objusuario.user;
        dbpassw=objusuario.password;
        System.out.println(dbuser + dbpassw);
    }

        String dbuser; //el nombre de usuario de mysql
        String dbpassw; //la contraseña de usuario de mysql
        Connection con;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDNI_PR = new javax.swing.JTextField();
        txtCOSTO = new javax.swing.JTextField();
        txtSABOR = new javax.swing.JTextField();
        txtDECORACION = new javax.swing.JTextField();
        txtTipo = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnConsultarIndividual = new javax.swing.JButton();
        btnConsultaGeneral = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 36)); // NOI18N
        jLabel1.setText("Productos");

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/homeIcon.jpg"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jLabel2.setText("DNI");

        jLabel3.setText("Costo");

        jLabel4.setText("Sabor");

        jLabel5.setText("Decoración");

        jLabel6.setText("Tipo Pastel");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnConsultarIndividual.setText("Consulta Individual");
        btnConsultarIndividual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarIndividualActionPerformed(evt);
            }
        });

        btnConsultaGeneral.setText("Consulta General");
        btnConsultaGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaGeneralActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "DNI", "Costo", "Sabor", "Decoración", "Tipo pastel"
            }
        ));
        jScrollPane1.setViewportView(Tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDNI_PR, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCOSTO, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSABOR, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDECORACION, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnModificar)
                                        .addGap(161, 161, 161))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(25, 25, 25)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnConsultarIndividual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnConsultaGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnVolver)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDNI_PR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar)
                    .addComponent(btnConsultarIndividual))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCOSTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnModificar)
                        .addComponent(btnConsultaGeneral)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSABOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEliminar)
                        .addComponent(btnLimpiar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDECORACION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(btnVolver)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        Main frmMain=new Main();
        frmMain.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        conexion conectar=new conexion();
        String sql;
        //insertar datos en la base de datos
        //se prepara la sentencia para insertar datos
        
        sql="INSERT INTO PRODUCTO(DNI_PR,COSTO_PR,SABOR_PR,DECORACION_PR,TIPO_PAN)";
        sql+="VALUES(?,?,?,?,?)";
        int DNI_PR=Integer.parseInt(txtDNI_PR.getText());
        int COSTO_PR=Integer.parseInt(txtCOSTO.getText());
        String SABOR_PR=txtSABOR.getText();
        String DECORACION_PR=txtDECORACION.getText();
        String TIPO_PAN=txtTipo.getText();
        
            //codigo para la base de datos
        try{
                
                // se establece la conexiòn
              
                con=conectar.getConexion(dbuser, dbpassw);
                
                PreparedStatement pstm;
                pstm =(PreparedStatement)con.prepareStatement(sql);
                pstm.setInt(1,DNI_PR);
                pstm.setInt(2,COSTO_PR);
                pstm.setString(3,SABOR_PR);
                pstm.setString(4,DECORACION_PR);
                pstm.setString(5,TIPO_PAN);
                int rtdo=pstm.executeUpdate();
                if(rtdo==1)JOptionPane.showMessageDialog(this, "Registro almacenado correctamente");
                else throw new RuntimeException("no se almaceno el registro");
                
                 con.close();
        
        }catch(RuntimeException| SQLException e){
         JOptionPane.showMessageDialog(this, "Conexion fallida");
         throw new RuntimeException(e);
   
            }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        String sql;
        conexion conectar=new conexion();

        int DNI_PR=Integer.parseInt(txtDNI_PR.getText());
        int COSTO_PR=Integer.parseInt(txtCOSTO.getText());
        String SABOR_PR=txtSABOR.getText();
        String DECORACION_PR=txtDECORACION.getText();
        String TIPO=txtTipo.getText();
        //Proceso

        sql="UPDATE PRODUCTO SET DNI_PR="+DNI_PR+", COSTO_PR='"+COSTO_PR+"',SABOR_PR='"+SABOR_PR
             +"', DECORACION_PR='"+DECORACION_PR+"', TIPO_PAN='"+TIPO+"' WHERE DNI_PR="+DNI_PR;
             
        
        System.out.println(sql);
            //codigo para la base de datos
        try{
                
                con=conectar.getConexion(dbuser, dbpassw);
                PreparedStatement pstm;
                pstm =(PreparedStatement)con.prepareStatement(sql);
                int rtdo=pstm.executeUpdate();
                if(rtdo==1)JOptionPane.showMessageDialog(this, "Registro MODIFICADO correctamente");
                else throw new RuntimeException("no se MODIFICO el registro");
                
                con.close();
                
                }catch(RuntimeException| SQLException e){
                 e.printStackTrace();
                 JOptionPane.showMessageDialog(this, "Conexion fallida");
                 throw new RuntimeException(e);
            }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        conexion conectar=new conexion();
  
        try {
            con=conectar.getConexion(dbuser, dbpassw);

             int id=Integer.parseInt(JOptionPane.showInputDialog
              (this,"Ingrese el DNI del PRODUCTO a ELIMINAR "));
             
            Statement statement = con.createStatement();
            String sql=("DELETE FROM PRODUCTO WHERE DNI_PR="+id);
            PreparedStatement pstm;
            pstm =(PreparedStatement)con.prepareStatement(sql);
            int rtdo=pstm.executeUpdate();
            if(rtdo==1)JOptionPane.showMessageDialog(this, "Registro ELIMINADO correctamente");
            else throw new RuntimeException("no se ELIMINO el registro");
             
            statement.close();
            con.close();

        }   catch(RuntimeException| SQLException e){
                 e.printStackTrace();
                 JOptionPane.showMessageDialog(this, "Conexion fallida");
                 throw new RuntimeException(e);
            }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnConsultarIndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarIndividualActionPerformed
        String sql;
        conexion conectar=new conexion();
        int DNI_PR;
        
        try {
            con=conectar.getConexion(dbuser, dbpassw);

            DNI_PR=Integer.parseInt(JOptionPane.showInputDialog
              (this,"Ingrese el DNI del producto a consultar "));

            Statement statement = con.createStatement();
            sql=("SELECT * FROM PRODUCTO WHERE DNI_PR="+DNI_PR);
            ResultSet rs = statement.executeQuery(sql);
              //System.out.println("hola" + rs);
            int i=0;
            while (rs.next()) {   
                int DNI = rs.getInt("DNI_PR");
                Tabla.setValueAt(DNI, i, 0);
                txtDNI_PR.setText(DNI+"");
                String COSTO_PR= rs.getString("COSTO_PR");
                Tabla.setValueAt(COSTO_PR, i, 1);
                txtCOSTO.setText(COSTO_PR);
                String SABOR_PR= rs.getString("SABOR_PR");
                Tabla.setValueAt(SABOR_PR, i, 2);
                txtSABOR.setText(SABOR_PR);
                String DECORACION_PR= rs.getString("DECORACION_PR");
                Tabla.setValueAt(DECORACION_PR, i, 3);
                txtDECORACION.setText(DECORACION_PR);
                String TIPO_PAN= rs.getString("TIPO_PAN");
                Tabla.setValueAt(TIPO_PAN, i, 4);
                txtTipo.setText(TIPO_PAN);
                ++i;
                
            }

            rs.close();
            statement.close();
            con.close();

        }     catch(RuntimeException| SQLException e){
                 e.printStackTrace();
                 JOptionPane.showMessageDialog(this, "Conexion fallida");
                 throw new RuntimeException(e);
        }
    }//GEN-LAST:event_btnConsultarIndividualActionPerformed

    private void btnConsultaGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaGeneralActionPerformed
        conexion conectar=new conexion();

        try {
            con=conectar.getConexion(dbuser, dbpassw);

            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery("SELECT * FROM PRODUCTO");
            
            int i=0;
            while (rs.next()) {
                int DNI_PR = rs.getInt("DNI_PR");
                Tabla.setValueAt(DNI_PR, i, 0);
                
                String COSTO_PR = rs.getString("COSTO_PR");
                Tabla.setValueAt(COSTO_PR, i, 1);
                
                String SABOR_PR= rs.getString("SABOR_PR");
                Tabla.setValueAt(SABOR_PR, i, 2);
                
                String DECORACION_PR= rs.getString("DECORACION_PR");
                Tabla.setValueAt(DECORACION_PR, i, 3);
                
                String TIPO_PAN= rs.getString("TIPO_PAN");
                Tabla.setValueAt(TIPO_PAN, i, 4);
                
                ++i;
                
            }

            rs.close();
            statement.close();
            con.close();

            }     catch(RuntimeException| SQLException e){
                 e.printStackTrace();
                 JOptionPane.showMessageDialog(this, "Conexion fallida");
                 throw new RuntimeException(e);
            }
    }//GEN-LAST:event_btnConsultaGeneralActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtDNI_PR.setText("");
        txtCOSTO.setText("");
        txtSABOR.setText("");
        txtDECORACION.setText("");
        txtTipo.setText("");
        txtDNI_PR.requestFocus();   
         for(int i=0;i<=49;i++){
            for(int j=0;j<5;j++){
                Tabla.setValueAt("", i, j);
             }
         }
    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla;
    private javax.swing.JButton btnConsultaGeneral;
    private javax.swing.JButton btnConsultarIndividual;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCOSTO;
    private javax.swing.JTextField txtDECORACION;
    private javax.swing.JTextField txtDNI_PR;
    private javax.swing.JTextField txtSABOR;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}
